# This is a basic workflow to help you get started with Actions

name: Wpf CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest
    
    #strategy:
    #  matrix:
    #    targetPlatform: [x86]
        
    env:
      Solution_Path: Source\WpfApp\WpfApp.sln
      Wpf_Project_Path: Source\WpfApp\WpfApp\WpfApp.csproj
      Test_Project_Path: Source\WpfApp\WpfApp.Business.Tests\WpfApp.Business.Tests.csproj
      Test_Project_Report_Path: Source\WpfApp\TestResults\TestResults.html
      Test_Project_Assembly_Path : Source\WpfApp\WpfApp.Business.Tests\bin\Release\WpfApp.Business.Tests.dll
      Published_Path: Source\WpfApp\WpfApp\bin\Release\app.publish
      XUnit_Console_Runner_Path: Source\WpfApp\packages\xunit.runner.console.2.4.1\tools\net452\xunit.console.exe
    
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: checks-out repository
      uses: actions/checkout@v2
      
    - name: Setup nuget
      uses: nuget/setup-nuget@v1
      
    - name: Restore nuget
      run: nuget restore ${{env.Solution_Path}}
      
    - name: Execute unit tests
      run: dotnet test $env:Test_Project_Path -c Release
      
    # Setup MSBuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.0
      
    - name: Build test project
      run: msbuild $env:Test_Project_Path /p:Configuration=Release
      
    - name: Generate HTML report
      run: ${{env.XUnit_Console_Runner_Path}} ${{env.Test_Project_Assembly_Path}} -html ${{env.Test_Project_Report_Path}}
      
    - name: Attach test report
      if: always()
      uses: actions/upload-artifact@v1
      with:
        name: test-reports
        path: ${{env.Test_Project_Report_Path}}
    
    # Setup MSBuild
    #- name: Setup MSBuild
    #  uses: microsoft/setup-msbuild@v1.0.0
      
    # Build WPF app
    - name: Build WPF app
      #working-directory: Source/WpfApp
      run: msbuild $env:Solution_Path /target:publish /p:Configuration=Release
      
    # Upload artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: wpf_publish
        path: ${{env.Published_Path}}
      
    # Send email
    - name: Send email
      uses: dawidd6/action-send-mail@v2.2.0
      with: 
        server_address: ${{secrets.EMAIL_SMTP}}
        server_port: ${{secrets.EMAIL_PORT}}
        username: ${{secrets.EMAIL_USERNAME}}
        password: ${{secrets.EMAIL_PASSWORD}}
        subject: Github Actions job result
        body: Build job of ${{github.repository}} completed successfully!
        to: ${{secrets.EMAIL_SECONDARY}}
        from: ${{secrets.EMAIL_USERNAME}}
        content_type: text/html
        
   
